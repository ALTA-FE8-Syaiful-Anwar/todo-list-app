{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\todo-list-app\\\\src\\\\components\\\\Todo.jsx\";\nimport React, { Component, useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Todo extends Component {\n  render() {\n    var _s = $RefreshSig$();\n\n    const Todo = _ref => {\n      _s();\n\n      let {\n        todos,\n        completeTodo,\n        removeTodo,\n        updateTodo\n      } = _ref;\n      const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n      });\n\n      const submitUpdate = value => {\n        updateTodo(edit.id, value);\n        setEdit({\n          id: null,\n          value: ''\n        });\n      };\n\n      if (edit.id) {\n        return /*#__PURE__*/_jsxDEV(TodoForm, {\n          edit: edit,\n          onSubmit: submitUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 12\n        }, this);\n      }\n\n      return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => completeTodo(todo.id),\n          children: todo.text\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n            onClick: () => removeTodo(todo.id),\n            className: \"delete-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n            onClick: () => setEdit({\n              id: todo.id,\n              value: todo.text\n            }),\n            className: \"edit-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this));\n    };\n\n    _s(Todo, \"yNsriMnMMfyG4swHz2ZbmBWu/qY=\");\n  }\n\n}","map":{"version":3,"names":["React","Component","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","render","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/todo-list-app/src/components/Todo.jsx"],"sourcesContent":["import React, { Component, useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nexport default class Todo extends Component {\r\n    render() {\r\n    const Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n    const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n}\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;EACxCM,MAAM,GAAG;IAAA;;IACT,MAAMD,IAAI,GAAG,QAAqD;MAAA;;MAAA,IAApD;QAAEE,KAAF;QAASC,YAAT;QAAuBC,UAAvB;QAAmCC;MAAnC,CAAoD;MAClE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;QACjCY,EAAE,EAAE,IAD6B;QAEjCC,KAAK,EAAE;MAF0B,CAAD,CAAhC;;MAKF,MAAMC,YAAY,GAAGD,KAAK,IAAI;QAC5BJ,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;QACAF,OAAO,CAAC;UACNC,EAAE,EAAE,IADE;UAENC,KAAK,EAAE;QAFD,CAAD,CAAP;MAID,CAND;;MAQA,IAAIH,IAAI,CAACE,EAAT,EAAa;QACX,oBAAO,QAAC,QAAD;UAAU,IAAI,EAAEF,IAAhB;UAAsB,QAAQ,EAAEI;QAAhC;UAAA;UAAA;UAAA;QAAA,QAAP;MACD;;MAED,OAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACf;QACE,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADrD;QAAA,wBAIE;UAAmB,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAN,CAA9C;UAAA,UACGI,IAAI,CAACG;QADR,GAAUH,IAAI,CAACJ,EAAf;UAAA;UAAA;UAAA;QAAA,QAJF,eAOE;UAAK,SAAS,EAAC,OAAf;UAAA,wBACE,QAAC,iBAAD;YACE,OAAO,EAAE,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAN,CAD3B;YAEE,SAAS,EAAC;UAFZ;YAAA;YAAA;YAAA;UAAA,QADF,eAKE,QAAC,MAAD;YACE,OAAO,EAAE,MAAMD,OAAO,CAAC;cAAEC,EAAE,EAAEI,IAAI,CAACJ,EAAX;cAAeC,KAAK,EAAEG,IAAI,CAACG;YAA3B,CAAD,CADxB;YAEE,SAAS,EAAC;UAFZ;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA,GAEOF,KAFP;QAAA;QAAA;QAAA;MAAA,QADK,CAAP;IAoBD,CAtCG;;IADS,GACHb,IADG;EAwCZ;;AAzC2C"},"metadata":{},"sourceType":"module"}